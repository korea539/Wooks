- 데이콘 및 캐글 대회용 단축 모음

! Ctrl + C - 실행 중지

1. 모듈 모음

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import koreanize_matplotlib - matplot 한국어 패치 / %config InlineBackend.figure_format = 'retina' 같이 사용
import re - 정규표현식
import tqdm as tqdm - progress_map(), 진행률 볼 수 있는 함수
import random - 랜덤 모듈
import requests - 웹 요청 받기 위한 모듈
import matplotlib.pyplot as plt - 시각화 도구인 pyplot 모듈
import plotly.express as px - pyplot 도구 추가 모듈
import koreanize_matplotlib - pyplot 도구 한글화 모듈
    ! %config InlineBackend.figure_format = 'retina' 위 모듈 작성 후 왼쪽 코드 따로 작성하여야 함
from glob import glob - 원하는 경로에서 파일을 가져오는 모듈
from bs4 import BeautifulSoup as bs - BeautifulSoup 크롤링을 위한 모듈, HTML 정리
from sklearn.feature_extraction.text import CountVectorizer - NLP 카운터 벡터라이저
from sklearn.feature_extraction.text import TfidfVectorizer - TF-IDF 벡터라이저
from sklearn.model_selection import train_test_split - train validation 하기
from sklearn.tree import DecisionTreeClassifier - Decision tree 분류 모델
from sklearn.tree import DecisionTreeRegressor - Decision tree 회귀 모델
from sklearn.model_selection import cross_val_predict - cross_vali 모델
from sklearn.metrics import accuracy_score - 정확도 점수 모듈


2. 판다스 로드 및 저장

pd.read_csv("file 경로 및 file name") - 데이터 불러오기
    csv 자리에 excel과 같이 확장자 변경 가능
    excel인 경우 encoding="cp949" 확인하기

Dataframe의 이름.to_csv() - 데이터 저장하기
    불러오는 기능과 같이 여러 확장자 변경 가능
    () 안에 index=False 적용 시 첫 컬럼 index 값 삭제(대회에서 주로 사용)
    
    
3. EDA

train과 test라는 가정하에 코드 작성

print(train.head())
print(test.head())

print(train.tail())
print(test.tail())

print(train.info())
print(test.info())

print(train.describe())
print(test.describe())

print(train.shape)
print(test.shape)

train.drop(columns=)

train[""].hist();


4. 데이터 전처리

train[""].map(lambda x : x.lower()) - 소문자 처리
train[""].map(lambda x : re.sub("[ㄱ-ㅎㅏ-ㅣ가-힣a-zA-Z0-9]", "", x)) - 한글, 영어, 숫자 제외 모두 삭제
train[""].map(lambda x : re.sub("[\s]", " ", x)) - 공백 하나만 만들기
train[""].fillna(0) - 결측치 전부 0 처리
train[""].fillna(method='ffill') - 결측치 앞의 값으로 처리
train[""].fillna(method='bfill') - 결측치 뒤의 값으로 처리
train[""].fillna(train[""].mean()) - 결측치 평균값으로 처리
train.reset_index(drop=True) - 인덱스 0부터 다시 배열
pd.get_dummies(train[""]) - 원핫인코딩 / 매우 중요
pd.melt(train, id_vars=기준 컬럼, value_vars=밸류로 가져올 컬럼)
    ! melt는 컬럼값들을 밸류로 가져오기 위한 기능

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, 
                                                   stratify=y, test_size=0.2)
X_train.shape, X_test.shape, y_train.shape, y_test.shape
    위 코드는 train_test_split 사용 방법
    
y_predict = cross_val_predict(model, X_train, y_train, cv=5, n_jobs=-1, verbose=1)
    위 코드는 CV 사용 방법

train.duplicated(keep=["first", "last", False]) : 중복치 확인
train.drop_duplicated(keep=["first", "last", False]) : unique한 값 하나만 남기고 중복값 삭제
    keep 값의 default는 "first"
    "first" : 중복값 중 첫번째 값을 duplicated
    "last" : 중복값 중 마지막 값을 duplicated
    False : 중복값 모두를 duplicated / 삭제

! DataFrame이 아니라 List 데이터의 값들의 종류를 볼 수 있는 코드
from collections import Counter
Counter(list) : 리스트의 값의 종류와 개수를 출력(딕셔너리 형식)

pd.set_option('display.max_columns', None) / 판다스로 모든 컬럼을 볼 수 있게 하는 코드


5. 시각화 도구

seaborn
    sns.barplot(data=train, x=x, y=y); / bar 그래프
    sns.histplot(data=train, x=x, hue=hue); / hist 그래프 (y값 없음)
    sns.kdeplot(data=train, x=x, hue=hue); / kde 그래프 (y값 없음, 곡선으로 분포 표현 그래프)
    sns.relplot(data=train, x=x, y=y); / scatter와 line의 상위호환 느낌
    sns.scatterplot(data=train, x=x, y=y); / 흩뿌려놓은 것처럼 숫자 데이터를 좌표 표현
    sns.lineplot(); / 선 그래프
















